cor.test(corr.data$SalePrice,corr.data$GarageArea, conf.level = 0.8)
corr.data$SalePrice
cor.test(house.train.df$SalePrice,house.train.df$GarageArea, conf.level = 0.8)
cor.test(house.train.df$SalePrice,house.train.df$PoolArea, conf.level = 0.8)
cor.test(house.train.df$SalePrice,house.train.df$TotalBsmtSF, conf.level = 0.8)
cor.test(house.train.df$SalePrice,house.train.df$GrLivArea, conf.level = 0.8)
precision.matrix<-solve(corr.data)
precision.matrix<-solve(corr.data)
round(precision.matrix, 4)
precision.matrix<-solve(corr.data)
round(precision.matrix, 4)
round(corr.data %*% precision.matrix, 4)
round(precision.matrix %*% corr.data, 4)
precision.matrix<-solve(corr.data)
round(precision.matrix, 4)
round(corr.data %*% precision.matrix, 4)
round(precision.matrix %*% corr.data, 4)
factorize <- function(A)
{
if (nrow(A) == ncol(A))
{
size <- nrow(A)
# Constructing a diagonal matrix. This will become the matrix L after factorization.
L <- diag(size)
for (i in 1:(size - 1))
{
for (j in (i + 1):size)
{
L[j, i] <- A[j, i] / A[i, i]  # building the L matrix
A[j, ]  <- A[j, ] - L[j, i] * A[i, ] # building U matrix
}
}
print(L %*% A)
print('-----L--------')
print(L)
print('--------U--------')
print(A)
}
}
factorize(corr.data)
factorize <- function(A)
{
if (nrow(A) == ncol(A))
{
size <- nrow(A)
# Constructing a diagonal matrix. This will become the matrix L after factorization.
L <- diag(size)
for (i in 1:(size - 1))
{
for (j in (i + 1):size)
{
L[j, i] <- A[j, i] / A[i, i]  # building the L matrix
A[j, ]  <- A[j, ] - L[j, i] * A[i, ] # building U matrix
}
}
print(L %*% A)
print('-----L--------')
print(L)
print('-----L--------')
print('--------U--------')
print(A)
print('--------U--------')
}
}
factorize <- function(A)
{
if (nrow(A) == ncol(A))
{
size <- nrow(A)
# Constructing a diagonal matrix. This will become the matrix L after factorization.
L <- diag(size)
for (i in 1:(size - 1))
{
for (j in (i + 1):size)
{
L[j, i] <- A[j, i] / A[i, i]  # building the L matrix
A[j, ]  <- A[j, ] - L[j, i] * A[i, ] # building U matrix
}
}
print('-----L--------')
print(L)
print('-----L--------')
print('--------U--------')
print(A)
print('--------U--------')
}
}
factorize(corr.data)
factorize <- function(A)
{
if (nrow(A) == ncol(A))
{
size <- nrow(A)
# Constructing a diagonal matrix. This will become the matrix L after factorization.
L <- diag(size)
for (i in 1:(size - 1))
{
for (j in (i + 1):size)
{
L[j, i] <- A[j, i] / A[i, i]  # building the L matrix
A[j, ]  <- A[j, ] - L[j, i] * A[i, ] # building U matrix
}
}
print('-----L--------')
print(L)
print('-----L--------')
print('--------U--------')
print(A)
print('--------U--------')
}
result<-list(L,U)
return(result)
}
result <- factorize(corr.data)
factorize <- function(A)
{
if (nrow(A) == ncol(A))
{
size <- nrow(A)
# Constructing a diagonal matrix. This will become the matrix L after factorization.
L <- diag(size)
for (i in 1:(size - 1))
{
for (j in (i + 1):size)
{
L[j, i] <- A[j, i] / A[i, i]  # building the L matrix
A[j, ]  <- A[j, ] - L[j, i] * A[i, ] # building U matrix
}
}
print('-----L--------')
print(L)
print('-----L--------')
print('--------U--------')
print(A)
print('--------U--------')
}
result<-list(L,A)
return(result)
}
result <- factorize(corr.data)
factorize <- function(A)
{
if (nrow(A) == ncol(A))
{
size <- nrow(A)
# Constructing a diagonal matrix. This will become the matrix L after factorization.
L <- diag(size)
for (i in 1:(size - 1))
{
for (j in (i + 1):size)
{
L[j, i] <- A[j, i] / A[i, i]  # building the L matrix
A[j, ]  <- A[j, ] - L[j, i] * A[i, ] # building U matrix
}
}
}
result<-list(L,A)
return(result)
}
result <- factorize(corr.data)
result[[1]]
result[[2]]
result <- factorize(corr.data)
result[[1]]
result[[2]]
round(result[[1]] %*% result[[2]] ,4)== round(correlationMatrix,4)
result <- factorize(corr.data)
L <- result[[1]]
U <- result[[2]]
round(L %*% U ,4)== round(correlationMatrix,4)
result <- factorize(corr.data)
L <- result[[1]]
U <- result[[2]]
round(L %*% U ,4)== round(corr.data,4)
result <- factorize(corr.data)
L <- result[[1]]
U <- result[[2]]
corr.data_1 <- round(L %*% U ,4)
corr.data_1 == corr.data
library(caTools)
set.seed(123)
head(house.train.df)
View(house.train.df)
dataset$MSSubClass = factor(dataset$MSSubClass, levels = c(20, 30, 40 , 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180, 190))
house.train.df$MSSubClass = factor(house.train.df$MSSubClass, levels = c(20, 30, 40 , 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180, 190))
head(house.train.df)
house.train.df <- read.csv("house-prices-advanced-regression-techniques/train.csv")
house.train.numeric <- select_if(house.train.df, is.numeric)
summary(house.train.numeric)
head(house.train.df)
house.train.df$MSSubClass = factor(house.train.df$MSSubClass, levels = c(20, 30, 40 , 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180, 190))
head(house.train.df)
head(house.train.df)
dataset = house.train.df[1:4]
head(dataset)
lm1 <- lm(data = dataset , formula = SalePrice ~ MSSubClass + MSZoning + LotFrontage )
dataset$SalePrice =house.train.df$SalePrice
head(dataset)
lm1 <- lm(data = dataset , formula = SalePrice ~ MSSubClass + MSZoning + LotFrontage )
summary(lm1)
head(house.train.df)
lm1 <- lm(data = house.train.df , formula = SalePrice ~ . )
head(house.train.df)
dataset = house.train.df[1:10,]
dataset$SalePrice =house.train.df$SalePrice
dataset = house.train.df[1:10,]
dataset$SalePrice =house.train.df$SalePrice
house.train.df <- read.csv("house-prices-advanced-regression-techniques/train.csv")
house.train.numeric <- select_if(house.train.df, is.numeric)
summary(house.train.numeric)
dataset = house.train.df[1:10,]
dataset$SalePrice =house.train.df$SalePrice
dataset <- house.train.df[1:10,]
dataset$SalePrice =house.train.df$SalePrice
dataset <- house.train.df[1:10,]
dataset$SalePrice <- house.train.df$SalePrice
head(dataset)
dataset.df <- house.train.df[1:10,]
dataset.df$SalePrice <- house.train.df$SalePrice
dataset.df <- house.train.df[1:5,]
dataset.df$SalePrice <- house.train.df$SalePrice
house.train.df$MSSubClass = factor(house.train.df$MSSubClass, levels = c(20, 30, 40 , 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180, 190))
dataset.df <- house.train.df[1:5,]
dataset.df$SalePrice <- house.train.df$SalePrice
dataset.df <- house.train.df[1:5,7, ]
head(dataset.df)
dataset.df <- house.train.df[1,5,]
head(dataset.df)
nrows(house.train.df)
nrow(house.train.df)
ncol(house.train.df)
dataset.df <- house.train.df[81,]
dataset.df
head(dataset.df)
dataset.df <- house.train.df[, 81]
head(dataset.df)
dataset.df <- house.train.df[ 81]
head(dataset.df)
dataset.df <- house.train.df[1:5]
head(dataset.df)
dataset.df <- house.train.df[1:5]
dataset$SalePrice = house.train.df$SalePrice
dataset.df$SalePrice = house.train.df$SalePrice
head(dataset.df)
lm1 <- lm(data = dataset.df , formula = SalePrice ~ . )
summary(lm1)
dataset.df <- house.train.df[1:20]
dataset.df$SalePrice = house.train.df$SalePrice
lm1 <- lm(data = house.train.df , formula = SalePrice ~ . )
dataset.df <- house.train.df[1:15]
dataset.df$SalePrice = house.train.df$SalePrice
lm1 <- lm(data = dataset.df , formula = SalePrice ~ . )
dataset.df <- house.train.df[1:10]
dataset.df$SalePrice = house.train.df$SalePrice
lm1 <- lm(data = dataset.df , formula = SalePrice ~ . )
dataset.df <- house.train.df[1:6]
dataset.df$SalePrice = house.train.df$SalePrice
lm1 <- lm(data = dataset.df , formula = SalePrice ~ . )
dataset.df <- house.train.df[1:7]
dataset.df$SalePrice = house.train.df$SalePrice
lm1 <- lm(data = dataset.df , formula = SalePrice ~ . )
head(dataset.df)
View(dataset.df)
dataset.df[, -which(colMeans(is.na(dataset.df)) > 0.1)]
lm1 <- lm(data = dataset.df , formula = SalePrice ~ . )
View(dataset.df)
head(dataset.df)
dataset.df[, -which(colMeans(is.na(dataset.df)) > 0)]
dataset.df <- dataset.df[, -which(colMeans(is.na(dataset.df)) > 0)]
lm1 <- lm(data = dataset.df , formula = SalePrice ~ . )
house.train.df <- house.train.df[, -which(colMeans(is.na(house.train.df)) > 0)]
lm1 <- lm(data = house.train.df , formula = SalePrice ~ . )
summary(lm1)
step(lm1 ,data= house.train.df , direction = "backward" ,test = "F")
regressor <- lm(formula = SalePrice ~ MSZoning + LotArea + Street + LandContour +
LotConfig + LandSlope + Neighborhood + Condition1 + Condition2 +
BldgType + HouseStyle + OverallQual + OverallCond + YearBuilt +
YearRemodAdd + RoofStyle + RoofMatl + ExterQual + Foundation +
BsmtFinSF1 + BsmtFinSF2 + BsmtUnfSF + X1stFlrSF + X2ndFlrSF +
FullBath + BedroomAbvGr + KitchenAbvGr + KitchenQual + TotRmsAbvGrd +
Functional + Fireplaces + GarageCars + GarageArea + WoodDeckSF +
ScreenPorch + PoolArea + MoSold + SaleType, data = house.train.df)
summary(regressor)
library(randomForest)
set.seed(123)
library(randomForest)
set.seed(123)
classifier = randomForest(data = house.train.df , x = ('MSZoning'),
y = house.train.df$SalePrice,
ntree = 500)
m1 <- randomForest(
formula = Sale_Price ~ .,
data    = house.train.df
)
library(randomForest)
set.seed(123)
classifier = randomForest( x = house.train.df$MSSubClass,
y = house.train.df$SalePrice,
ntree = 500)
library(randomForest)
set.seed(123)
m1 <- randomForest(
formula = house.train.df$Sale_Price ~ .,
data    = house.train.df
)
randomForest()
randomForest()
randomForest()
randomForest()
randomForest()
randomForest(x = house.train.df$SalePrice ~ house.train.df$MSZoning + house.train.df$LotArea)
randomForest(formula = house.train.df$SalePrice ~ house.train.df$MSZoning + house.train.df$LotArea)
randomForest(x= house.train.df , formula = SalePrice ~ MSZoning + LotArea + )
randomForest(x= house.train.df , formula = SalePrice ~ MSZoning + LotArea  )
randomForest(x= house.train.df , formula = SalePrice ~ MSZoning + LotArea + Street + LandContour +
LotConfig + LandSlope + Neighborhood + Condition1 + Condition2 +
BldgType + HouseStyle + OverallQual + OverallCond + YearBuilt +
YearRemodAdd + RoofStyle + RoofMatl + ExterQual + Foundation +
BsmtFinSF1 + BsmtFinSF2 + BsmtUnfSF + X1stFlrSF + X2ndFlrSF +
FullBath + BedroomAbvGr + KitchenAbvGr + KitchenQual + TotRmsAbvGrd +
Functional + Fireplaces + GarageCars + GarageArea + WoodDeckSF +
ScreenPorch + PoolArea + MoSold + SaleType  )
summary(randomForestModel)
randomForestModel <- randomForest(x= house.train.df , formula = SalePrice ~ MSZoning + LotArea + Street + LandContour +
LotConfig + LandSlope + Neighborhood + Condition1 + Condition2 +
BldgType + HouseStyle + OverallQual + OverallCond + YearBuilt +
YearRemodAdd + RoofStyle + RoofMatl + ExterQual + Foundation +
BsmtFinSF1 + BsmtFinSF2 + BsmtUnfSF + X1stFlrSF + X2ndFlrSF +
FullBath + BedroomAbvGr + KitchenAbvGr + KitchenQual + TotRmsAbvGrd +
Functional + Fireplaces + GarageCars + GarageArea + WoodDeckSF +
ScreenPorch + PoolArea + MoSold + SaleType  )
randomForestModel
house.train.df1 <- house.train.df %>% select('MSZoning', 'LotArea' )
house.train.df1
house.train.df1 <- house.train.df %>% select('MSZoning', 'LotArea', 'Street', 'LandContour' , 'LotConfig' , 'LandSlope' ,  'Neighborhood' ,  'Condition1' ,  'Condition2' , 'BldgType' , 'HouseStyle' , 'OverallQual' ,'OverallCond' , 'YearBuilt' , 'YearRemodAdd' , 'RoofStyle' , 'RoofMatl', 'ExterQual' , 'Foundation', 'BsmtFinSF1' , 'BsmtFinSF2' , 'BsmtUnfSF' , 'X1stFlrSF' , 'X2ndFlrSF' , 'FullBath' , 'BedroomAbvGr' , 'KitchenAbvGr' , 'KitchenQual' , 'TotRmsAbvGrd' , 'Functional' , 'Fireplaces' , 'GarageCars' , 'GarageArea' , 'WoodDeckSF' ,  'ScreenPorch' , 'PoolArea' , 'MoSold' , 'SaleType'  )
y_pred = predict(randomForestModel, newdata = house.train.df1)
randomForestModel <- randomForest(x= house.train.df , formula = SalePrice ~ MSZoning + LotArea + Street + LandContour +
LotConfig + LandSlope + Neighborhood + Condition1 + Condition2 +
BldgType + HouseStyle + OverallQual + OverallCond + YearBuilt +
YearRemodAdd + RoofStyle + RoofMatl + ExterQual + Foundation +
BsmtFinSF1 + BsmtFinSF2 + BsmtUnfSF + X1stFlrSF + X2ndFlrSF +
FullBath + BedroomAbvGr + KitchenAbvGr + KitchenQual + TotRmsAbvGrd +
Functional + Fireplaces + GarageCars + GarageArea + WoodDeckSF +
ScreenPorch + PoolArea + MoSold + SaleType  )
y_pred = predict(randomForestModel, newdata = house.train.df1)
randomForestModel <- randomForest(x= house.train.df , formula = SalePrice ~ PoolArea)
house.train.df2 <- house.train.df  %>% select('PoolArea')
y_pred = predict(randomForestModel, newdata = house.train.df2)
randomForestModel <- randomForest(x= house.train.df , formula = 'SalePrice' ~ 'PoolArea')
y_pred = predict(randomForestModel, newdata = house.train.df2)
house.train.df2
View(house.train.df2)
View(house.train.df)
randomForestModel <- randomForest(x= house.train.df , formula = 'SalePrice' ~ 'LotArea')
house.train.df2 <- house.train.df  %>% select('LotArea')
View(house.train.df2)
y_pred = predict(randomForestModel, newdata = house.train.df2)
randomForestModel
house.train.df2 <- house.train.df  %>% select('LotArea', 'SalePrice' )
randomForestModel <- randomForest(x= house.train.df2 , formula = 'SalePrice' ~ 'LotArea')
y_pred = predict(randomForestModel, newdata = house.train.df2)
set.seed(1234)
regressor = randomForest(x = house.train.df2$LotArea,
y = house.train.df2$SalePrice,
ntree = 500)
View(house.train.df2)
regressor = randomForest(x = house.train.df2[-2],
y = house.train.df2$SalePrice,
ntree = 500)
y_pred = predict(regressor, newdata = house.train.df2)
y_pred
regressor = randomForest(x = house.train.df2[-1],
y = house.train.df2$SalePrice,
ntree = 500)
y_pred = predict(regressor, newdata = house.train.df2)
house.train.df1 <- house.train.df %>% select('MSZoning', 'LotArea', 'Street', 'LandContour' , 'LotConfig' , 'LandSlope' ,  'Neighborhood' ,  'Condition1' ,  'Condition2' , 'BldgType' , 'HouseStyle' , 'OverallQual' ,'OverallCond' , 'YearBuilt' , 'YearRemodAdd' , 'RoofStyle' , 'RoofMatl', 'ExterQual' , 'Foundation', 'BsmtFinSF1' , 'BsmtFinSF2' , 'BsmtUnfSF' , 'X1stFlrSF' , 'X2ndFlrSF' , 'FullBath' , 'BedroomAbvGr' , 'KitchenAbvGr' , 'KitchenQual' , 'TotRmsAbvGrd' , 'Functional' , 'Fireplaces' , 'GarageCars' , 'GarageArea' , 'WoodDeckSF' ,  'ScreenPorch' , 'PoolArea' , 'MoSold' , 'SaleType'  )
ncol(house.train.df1)
regressor = randomForest(x = house.train.df1[-37],
y = house.train.df1$SalePrice,
ntree = 500)
y_pred = predict(regressor, newdata = house.train.df2)
regressor = randomForest(x = house.train.df2[-37],
y = house.train.df2$SalePrice,
ntree = 500)
y_pred = predict(regressor, newdata = house.train.df2)
house.train.df2$SalePrice
regressor
summary(regressor)
summary(regressor)
regressor <- lm(formula = SalePrice ~ MSZoning + LotArea + Street + LandContour +
LotConfig + LandSlope + Neighborhood + Condition1 + Condition2 +
BldgType + HouseStyle + OverallQual + OverallCond + YearBuilt +
YearRemodAdd + RoofStyle + RoofMatl + ExterQual + Foundation +
BsmtFinSF1 + BsmtFinSF2 + BsmtUnfSF + X1stFlrSF + X2ndFlrSF +
FullBath + BedroomAbvGr + KitchenAbvGr + KitchenQual + TotRmsAbvGrd +
Functional + Fireplaces + GarageCars + GarageArea + WoodDeckSF +
ScreenPorch + PoolArea + MoSold + SaleType, data = house.train.df)
summary(regressor)
regressor <- lm(formula = SalePrice ~ MSZoning + LotArea + Street + LandContour +
LotConfig + LandSlope + Neighborhood + Condition1  +
BldgType + HouseStyle + OverallQual + OverallCond + YearBuilt +
YearRemodAdd + RoofStyle + RoofMatl + ExterQual + Foundation +
BsmtFinSF1 + BsmtFinSF2 + BsmtUnfSF + X1stFlrSF + X2ndFlrSF +
FullBath + BedroomAbvGr + KitchenAbvGr + KitchenQual + TotRmsAbvGrd +
Functional + Fireplaces + GarageCars + GarageArea + WoodDeckSF +
ScreenPorch + PoolArea + MoSold + SaleType, data = house.train.df)
summary(regressor)
regressor <- lm(formula = SalePrice ~ MSZoning + LotArea + Street + LandContour +
LotConfig + LandSlope + Neighborhood + Condition1 + Condition2 +
BldgType + HouseStyle + OverallQual + OverallCond + YearBuilt +
YearRemodAdd + RoofStyle + RoofMatl + ExterQual + Foundation +
BsmtFinSF1 + BsmtFinSF2 + BsmtUnfSF + X1stFlrSF + X2ndFlrSF +
FullBath + BedroomAbvGr + KitchenAbvGr + KitchenQual + TotRmsAbvGrd +
Functional + Fireplaces + GarageCars + GarageArea  +
ScreenPorch + PoolArea + MoSold + SaleType, data = house.train.df)
summary(regressor)
regressor <- lm(formula = SalePrice ~ MSZoning + LotArea + Street + LandContour +
LotConfig + LandSlope + Neighborhood + Condition1 + Condition2 +
BldgType + HouseStyle + OverallQual + OverallCond + YearBuilt +
YearRemodAdd  + RoofMatl + ExterQual + Foundation +
BsmtFinSF1 + BsmtFinSF2 + BsmtUnfSF + X1stFlrSF + X2ndFlrSF +
FullBath + BedroomAbvGr + KitchenAbvGr + KitchenQual + TotRmsAbvGrd +
Functional + Fireplaces + GarageCars + GarageArea + WoodDeckSF +
ScreenPorch + PoolArea + MoSold + SaleType, data = house.train.df)
summary(regressor)
regressor <- lm(formula = SalePrice ~ MSZoning + LotArea + Street + LandContour +
LotConfig + LandSlope + Neighborhood + Condition1 + Condition2 +
BldgType + HouseStyle + OverallQual + OverallCond + YearBuilt +
YearRemodAdd + RoofStyle + RoofMatl + ExterQual + Foundation +
BsmtFinSF1 + BsmtFinSF2 + BsmtUnfSF + X1stFlrSF + X2ndFlrSF
+ BedroomAbvGr + KitchenAbvGr + KitchenQual + TotRmsAbvGrd +
Functional + Fireplaces + GarageCars + GarageArea + WoodDeckSF +
ScreenPorch + PoolArea + MoSold + SaleType, data = house.train.df)
summary(regressor)
regressor <- lm(formula = SalePrice ~ MSZoning + LotArea + Street + LandContour +
LotConfig + LandSlope + Neighborhood + Condition1 + Condition2 +
BldgType + HouseStyle + OverallQual + OverallCond + YearBuilt +
YearRemodAdd + RoofStyle + RoofMatl + ExterQual + Foundation +
BsmtFinSF1 + BsmtFinSF2 + BsmtUnfSF + X1stFlrSF + X2ndFlrSF +
FullBath + BedroomAbvGr + KitchenAbvGr + KitchenQual + TotRmsAbvGrd +
Functional + Fireplaces + GarageCars + GarageArea + WoodDeckSF +
ScreenPorch + PoolArea + MoSold + SaleType, data = house.train.df)
summary(regressor)
house.train.df1 <- house.train.df %>% select('MSZoning', 'LotArea', 'Street', 'LandContour' , 'LotConfig' , 'LandSlope' ,  'Neighborhood' ,  'Condition1' ,  'Condition2' , 'BldgType' , 'HouseStyle' , 'OverallQual' ,'OverallCond' , 'YearBuilt' , 'YearRemodAdd' , 'RoofStyle' , 'RoofMatl', 'ExterQual' , 'Foundation', 'BsmtFinSF1' , 'BsmtFinSF2' , 'BsmtUnfSF' , 'X1stFlrSF' , 'X2ndFlrSF' , 'FullBath' , 'BedroomAbvGr' , 'KitchenAbvGr' , 'KitchenQual' , 'TotRmsAbvGrd' , 'Functional' , 'Fireplaces' , 'GarageCars' , 'GarageArea' , 'WoodDeckSF' ,  'ScreenPorch' , 'PoolArea' , 'MoSold' , 'SaleType'  )
regressor = randomForest(x = house.train.df1[-37],
y = house.train.df1$SalePrice,
ntree = 500)
regressor = randomForest(x = house.train.df1[-37],
y = house.train.df1$SalePrice,
ntree = 500)
y_pred = predict(regressor, newdata = house.train.df2)
house.train.df2 <- house.train.df  %>% select('LotArea', 'SalePrice' )
regressor = randomForest(x = house.train.df2[-37],
y = house.train.df2$SalePrice,
ntree = 500)
house.train.df2
regressor = randomForest(x = house.train.df2[-1],
y = house.train.df2$SalePrice,
ntree = 500)
y_pred = predict(regressor, newdata = house.train.df2[-1])
house.train.df2 <- house.train.df  %>% select('LotArea', 'MSZoning' , 'SalePrice'  )
regressor = randomForest(x = house.train.df2[-2],
y = house.train.df2$SalePrice,
ntree = 500)
y_pred = predict(regressor, newdata = house.train.df2[-2])
house.train.df2
house.train.df1 <- house.train.df %>% select('MSZoning', 'LotArea', 'Street', 'LandContour' , 'LotConfig' , 'LandSlope' ,  'Neighborhood' ,  'Condition1' ,  'Condition2' , 'BldgType' , 'HouseStyle' , 'OverallQual' ,'OverallCond' , 'YearBuilt' , 'YearRemodAdd' , 'RoofStyle' , 'RoofMatl', 'ExterQual' , 'Foundation', 'BsmtFinSF1' , 'BsmtFinSF2' , 'BsmtUnfSF' , 'X1stFlrSF' , 'X2ndFlrSF' , 'FullBath' , 'BedroomAbvGr' , 'KitchenAbvGr' , 'KitchenQual' , 'TotRmsAbvGrd' , 'Functional' , 'Fireplaces' , 'GarageCars' , 'GarageArea' , 'WoodDeckSF' ,  'ScreenPorch' , 'PoolArea' , 'MoSold' , 'SaleType', 'SalePrice'  )
ncol(house.train.df1)
regressor = randomForest(x = house.train.df1[-38],
y = house.train.df1$SalePrice,
ntree = 500)
y_pred = predict(regressor, newdata = house.train.df1[-38])
result <- data.frame(y_pred)
View(result)
result <- data.frame(y_pred, c('SalePrice'))
View(result)
result <- data.frame('SalePrice' = y_pred )
View(result)
result <- data.frame('SalePrice' = y_pred )
result$Id <- house.train.df$Id
View(result)
result.to_csv(index=False)
result.to_csv('export_dataframe.csv', index=False)
write.csv(result, file = "MyData.csv")
write.csv(result, file = "MyData.csv", row.names=FALSE)
result <- data.frame('Id' = house.train.df$Id, 'SalePrice' = y_pred )
write.csv(result, file = "MyData.csv", row.names=FALSE)
house.train.df <- read.csv("house-prices-advanced-regression-techniques/train.csv")
house.train.numeric <- select_if(house.train.df, is.numeric)
summary(house.train.numeric)
house.test.df <- read.csv("house-prices-advanced-regression-techniques/test.csv")
house.test.df$MSSubClass = factor(house.test.df$MSSubClass, levels = c(20, 30, 40 , 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180, 190))
View(house.test.df)
house.test.df1 <- house.test.df %>% select('MSZoning', 'LotArea', 'Street', 'LandContour' , 'LotConfig' , 'LandSlope' ,  'Neighborhood' ,  'Condition1' ,  'Condition2' , 'BldgType' , 'HouseStyle' , 'OverallQual' ,'OverallCond' , 'YearBuilt' , 'YearRemodAdd' , 'RoofStyle' , 'RoofMatl', 'ExterQual' , 'Foundation', 'BsmtFinSF1' , 'BsmtFinSF2' , 'BsmtUnfSF' , 'X1stFlrSF' , 'X2ndFlrSF' , 'FullBath' , 'BedroomAbvGr' , 'KitchenAbvGr' , 'KitchenQual' , 'TotRmsAbvGrd' , 'Functional' , 'Fireplaces' , 'GarageCars' , 'GarageArea' , 'WoodDeckSF' ,  'ScreenPorch' , 'PoolArea' , 'MoSold' , 'SaleType'  )
y_pred = predict(regressor, newdata = house.test.df1[-38])
y_pred = predict(regressor, newdata = house.test.df1)
y_pred = predict(regressor, newdata = house.test.df1)
house.test.df1$SalePrice <- house.train.df1$SalePrice
house.test.df1 <- house.test.df %>% select('MSZoning', 'LotArea', 'Street', 'LandContour' , 'LotConfig' , 'LandSlope' ,  'Neighborhood' ,  'Condition1' ,  'Condition2' , 'BldgType' , 'HouseStyle' , 'OverallQual' ,'OverallCond' , 'YearBuilt' , 'YearRemodAdd' , 'RoofStyle' , 'RoofMatl', 'ExterQual' , 'Foundation', 'BsmtFinSF1' , 'BsmtFinSF2' , 'BsmtUnfSF' , 'X1stFlrSF' , 'X2ndFlrSF' , 'FullBath' , 'BedroomAbvGr' , 'KitchenAbvGr' , 'KitchenQual' , 'TotRmsAbvGrd' , 'Functional' , 'Fireplaces' , 'GarageCars' , 'GarageArea' , 'WoodDeckSF' ,  'ScreenPorch' , 'PoolArea' , 'MoSold' , 'SaleType'  )
house.train.df1 <- house.train.df %>% select('MSZoning', 'LotArea', 'Street', 'LandContour' , 'LotConfig' , 'LandSlope' ,  'Neighborhood' ,  'Condition1' ,  'Condition2' , 'BldgType' , 'HouseStyle' , 'OverallQual' ,'OverallCond' , 'YearBuilt' , 'YearRemodAdd' , 'RoofStyle' , 'RoofMatl', 'ExterQual' , 'Foundation', 'BsmtFinSF1' , 'BsmtFinSF2' , 'BsmtUnfSF' , 'X1stFlrSF' , 'X2ndFlrSF' , 'FullBath' , 'BedroomAbvGr' , 'KitchenAbvGr' , 'KitchenQual' , 'TotRmsAbvGrd' , 'Functional' , 'Fireplaces' , 'GarageCars' , 'GarageArea' , 'WoodDeckSF' ,  'ScreenPorch' , 'PoolArea' , 'MoSold' , 'SaleType', 'SalePrice'  )
regressor = randomForest(x = house.train.df1[-38],
y = house.train.df1$SalePrice,
ntree = 500)
y_pred = predict(regressor, newdata = house.test.df1)
View(house.test.df1)
y_pred = predict(regressor, newdata = house.test.df1[1,])
house.test.df1[1,]
house.test.df1
house.test.df1 <- house.test.df %>% select('MSZoning', 'LotArea', 'Street', 'LandContour' , 'LotConfig' , 'LandSlope' ,  'Neighborhood' ,  'Condition1' ,  'Condition2' , 'BldgType' , 'HouseStyle' , 'OverallQual' ,'OverallCond' , 'YearBuilt' , 'YearRemodAdd' , 'RoofStyle' , 'RoofMatl', 'ExterQual' , 'Foundation', 'BsmtFinSF1' , 'BsmtFinSF2' , 'BsmtUnfSF' , 'X1stFlrSF' , 'X2ndFlrSF' , 'FullBath' , 'BedroomAbvGr' , 'KitchenAbvGr' , 'KitchenQual' , 'TotRmsAbvGrd' , 'Functional' , 'Fireplaces' , 'GarageCars' , 'GarageArea' , 'WoodDeckSF' ,  'ScreenPorch' , 'PoolArea' , 'MoSold' , 'SaleType'  )
house.test.df1
View(house.test.df1)
house.test.df1 <- house.test.df %>% select('MSZoning', 'LotArea', 'Street', 'LandContour' , 'LotConfig' , 'LandSlope' ,  'Neighborhood' ,  'Condition1' ,  'Condition2' , 'BldgType' , 'HouseStyle' , 'OverallQual' ,'OverallCond' , 'YearBuilt' , 'YearRemodAdd' , 'RoofStyle' , 'RoofMatl', 'ExterQual' , 'Foundation', 'BsmtFinSF1' , 'BsmtFinSF2' , 'BsmtUnfSF' , 'X1stFlrSF' , 'X2ndFlrSF' , 'FullBath' , 'BedroomAbvGr' , 'KitchenAbvGr' , 'KitchenQual' , 'TotRmsAbvGrd' , 'Functional' , 'Fireplaces' , 'GarageCars' , 'GarageArea' , 'WoodDeckSF' ,  'ScreenPorch' , 'PoolArea' , 'MoSold' , 'SaleType'  )
